{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport AuthService from '../service/authService';\nimport { finishLoading, startLoading } from './Loading';\nconst authService = AuthService.getHttpInstance();\nexport const authRegister = createAsyncThunk('auth/REGISTER', async (form, thunkAPI) => {\n  console.log('async');\n  console.log(thunkAPI);\n  thunkAPI.dispatch(startLoading());\n  try {\n    const res = await authService.signup(form.username, form.password);\n    return res.data;\n  } catch (e) {\n    //todo 에러메세지 가져오기\n\n    return thunkAPI.rejectWithValue({\n      error: String(e)\n    });\n  } finally {\n    thunkAPI.dispatch(finishLoading());\n  }\n});\nexport const authLogin = createAsyncThunk('auth/LOGIN', async (form, thunkAPI) => {\n  thunkAPI.dispatch(startLoading());\n  try {\n    const res = await authService.login(form.username, form.password);\n    return res.data;\n  } catch (e) {\n    console.log(e);\n    return thunkAPI.rejectWithValue({\n      error: String(e)\n    });\n  } finally {\n    thunkAPI.dispatch(finishLoading());\n  }\n});\nconst initialAuthFormState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n    passwordMatch: true\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  authError: null,\n  authDuplicateError: null,\n  auth: null\n};\nconst authSlice = createSlice({\n  name: 'authForm',\n  initialState: initialAuthFormState,\n  reducers: {\n    changeField: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const {\n        form,\n        name,\n        value\n      } = payload;\n      state[form][name] = value;\n      if (form === 'register') {\n        if (state[form].password !== state[form].passwordConfirm) state[form].passwordMatch = false;else state[form].passwordMatch = true;\n      }\n    },\n    initialForm: state => {\n      console.log(initialAuthFormState);\n      return initialAuthFormState;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(authRegister.pending, (state, action) => {\n      state.authError = null;\n      console.log('pending auth');\n    }).addCase(authRegister.fulfilled, (state, action) => {\n      state.auth = action.payload;\n      console.log('fulfilled auth');\n    }).addCase(authRegister.rejected, (state, action) => {\n      var _action$payload;\n      state.authError = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.error;\n    }).addCase(authLogin.pending, (state, action) => {\n      console.log('pending');\n    }).addCase(authLogin.fulfilled, (state, action) => {\n      state.auth = action.payload;\n    }).addCase(authLogin.rejected, (state, action) => {\n      var _action$payload2;\n      state.authError = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.error;\n    });\n  }\n});\nexport const {\n  changeField,\n  initialForm\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","AuthService","finishLoading","startLoading","authService","getHttpInstance","authRegister","form","thunkAPI","console","log","dispatch","res","signup","username","password","data","e","rejectWithValue","error","String","authLogin","login","initialAuthFormState","register","passwordConfirm","passwordMatch","authError","authDuplicateError","auth","authSlice","name","initialState","reducers","changeField","state","payload","value","initialForm","extraReducers","builder","addCase","pending","action","fulfilled","rejected","actions","reducer"],"sources":["/Users/ysy/projects/ticktickup-client/src/modules/auth.ts"],"sourcesContent":["import { AxiosResponse } from 'axios';\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppDispatch } from '.';\nimport AuthService from '../service/authService';\nimport { finishLoading, startLoading } from './Loading';\n\nconst authService = AuthService.getHttpInstance();\n\nexport interface AuthSuccessResponse {\n  username: string;\n  token: string;\n}\n\nexport interface AuthFailResponse {\n  error: string;\n}\n\nexport type Register = {\n  username: string;\n  password: string;\n  passwordConfirm: string;\n  passwordMatch: boolean;\n  [key: string]: string | boolean;\n};\n\nexport type Login = {\n  username: string;\n  password: string;\n  [key: string]: string;\n};\n\nexport const authRegister = createAsyncThunk<\n  { token: string; username: string },\n  { username: string; password: string },\n  {\n    rejectValue: AuthFailResponse;\n    dispatch: AppDispatch;\n  }\n>('auth/REGISTER', async (form, thunkAPI) => {\n  console.log('async');\n  console.log(thunkAPI);\n  thunkAPI.dispatch(startLoading());\n  try {\n    const res = (await authService.signup(\n      form.username,\n      form.password\n    )) as AxiosResponse;\n\n    return res.data;\n  } catch (e) {\n    //todo 에러메세지 가져오기\n\n    return thunkAPI.rejectWithValue({ error: String(e) });\n  } finally {\n    thunkAPI.dispatch(finishLoading());\n  }\n});\n\nexport const authLogin = createAsyncThunk<\n  { token: string; username: string },\n  { username: string; password: string },\n  {\n    rejectValue: AuthFailResponse;\n    dispatch: AppDispatch;\n  }\n>('auth/LOGIN', async (form: Login, thunkAPI) => {\n  thunkAPI.dispatch(startLoading());\n  try {\n    const res = (await authService.login(\n      form.username,\n      form.password\n    )) as AxiosResponse;\n\n    return res.data;\n  } catch (e) {\n    console.log(e);\n    return thunkAPI.rejectWithValue({ error: String(e) });\n  } finally {\n    thunkAPI.dispatch(finishLoading());\n  }\n});\n\ninterface InitialAuthFormState {\n  register: Register;\n  login: Login;\n  authError: string | null | undefined;\n  authDuplicateError: string | null;\n  auth: null | { [key: string]: string };\n}\n\nconst initialAuthFormState: InitialAuthFormState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n    passwordMatch: true,\n  },\n\n  login: {\n    username: '',\n    password: '',\n  },\n  authError: null,\n  authDuplicateError: null,\n  auth: null,\n};\n\nconst authSlice = createSlice({\n  name: 'authForm',\n  initialState: initialAuthFormState,\n  reducers: {\n    changeField: (\n      state,\n      {\n        payload,\n      }: PayloadAction<{\n        form: 'login' | 'register';\n        value: string;\n        name: string;\n      }>\n    ) => {\n      const { form, name, value } = payload;\n\n      state[form][name] = value;\n      if (form === 'register') {\n        if (state[form].password !== state[form].passwordConfirm)\n          state[form].passwordMatch = false;\n        else state[form].passwordMatch = true;\n      }\n    },\n    initialForm: (state) => {\n      console.log(initialAuthFormState);\n      return initialAuthFormState;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(authRegister.pending, (state, action) => {\n        state.authError = null;\n        console.log('pending auth');\n      })\n      .addCase(authRegister.fulfilled, (state, action) => {\n        state.auth = action.payload;\n\n        console.log('fulfilled auth');\n      })\n      .addCase(authRegister.rejected, (state, action) => {\n        state.authError = action.payload?.error;\n      })\n      .addCase(authLogin.pending, (state, action) => {\n        console.log('pending');\n      })\n      .addCase(authLogin.fulfilled, (state, action) => {\n        state.auth = action.payload;\n      })\n      .addCase(authLogin.rejected, (state, action) => {\n        state.authError = action.payload?.error;\n      });\n  },\n});\n\nexport const { changeField, initialForm } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}