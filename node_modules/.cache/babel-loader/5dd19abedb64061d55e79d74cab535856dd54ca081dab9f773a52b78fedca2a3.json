{"ast":null,"code":"import axios from 'axios';\nexport default class Http {\n  constructor(baseURL) {\n    this.client = void 0;\n    this.client = axios.create({\n      baseURL: baseURL,\n      withCredentials: true\n    });\n  }\n  async fetch(url, options) {\n    this.client.defaults.headers.post['Content-Type'] = 'application/json';\n    const {\n      data,\n      method,\n      headers\n    } = options;\n    const request = {\n      url,\n      method,\n      headers: {\n        ...headers\n      },\n      data\n    };\n    try {\n      const res = await this.client(request);\n      console.log(res);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  static getHttpInstance() {\n    if (!Http.instance) {\n      Http.instance = new Http(process.env.REACT_APP_BASE_URL);\n    }\n    return Http.instance;\n  }\n}\nHttp.instance = void 0;\nconst a = Http.getHttpInstance();","map":{"version":3,"names":["axios","Http","constructor","baseURL","client","create","withCredentials","fetch","url","options","defaults","headers","post","data","method","request","res","console","log","e","getHttpInstance","instance","process","env","REACT_APP_BASE_URL","a"],"sources":["/Users/ysy/projects/ticktickup-client/src/network/http.ts"],"sourcesContent":["import axios, {\n  AxiosInstance,\n  AxiosInterceptorOptions,\n  AxiosRequestConfig,\n  AxiosResponse,\n} from 'axios';\n\nexport interface HttpInterface {\n  fetch: (url: string, options: AxiosRequestConfig) => Promise<AxiosResponse>;\n}\n\nexport default class Http implements HttpInterface {\n  private static instance: Http;\n  private readonly client: AxiosInstance;\n  private constructor(baseURL: string) {\n    this.client = axios.create({\n      baseURL: baseURL,\n      withCredentials: true,\n    });\n  }\n\n  async fetch(\n    url: string,\n    options: AxiosRequestConfig\n  ): Promise<AxiosResponse> {\n    this.client.defaults.headers.post['Content-Type'] = 'application/json';\n    const { data, method, headers } = options;\n    const request = {\n      url,\n      method,\n      headers: {\n        ...headers,\n      },\n      data,\n    };\n    try {\n      const res = await this.client(request);\n      console.log(res);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  public static getHttpInstance() {\n    if (!Http.instance) {\n      Http.instance = new Http(process.env.REACT_APP_BASE_URL as string);\n    }\n    return Http.instance;\n  }\n}\n\nconst a: HttpInterface = Http.getHttpInstance();\n"],"mappings":"AAAA,OAAOA,KAAK,MAKL,OAAO;AAMd,eAAe,MAAMC,IAAI,CAA0B;EAGzCC,WAAW,CAACC,OAAe,EAAE;IAAA,KADpBC,MAAM;IAErB,IAAI,CAACA,MAAM,GAAGJ,KAAK,CAACK,MAAM,CAAC;MACzBF,OAAO,EAAEA,OAAO;MAChBG,eAAe,EAAE;IACnB,CAAC,CAAC;EACJ;EAEA,MAAMC,KAAK,CACTC,GAAW,EACXC,OAA2B,EACH;IACxB,IAAI,CAACL,MAAM,CAACM,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;IACtE,MAAM;MAAEC,IAAI;MAAEC,MAAM;MAAEH;IAAQ,CAAC,GAAGF,OAAO;IACzC,MAAMM,OAAO,GAAG;MACdP,GAAG;MACHM,MAAM;MACNH,OAAO,EAAE;QACP,GAAGA;MACL,CAAC;MACDE;IACF,CAAC;IACD,IAAI;MACF,MAAMG,GAAG,GAAG,MAAM,IAAI,CAACZ,MAAM,CAACW,OAAO,CAAC;MACtCE,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVF,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;IAChB;EACF;EAEA,OAAcC,eAAe,GAAG;IAC9B,IAAI,CAACnB,IAAI,CAACoB,QAAQ,EAAE;MAClBpB,IAAI,CAACoB,QAAQ,GAAG,IAAIpB,IAAI,CAACqB,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAAW;IACpE;IACA,OAAOvB,IAAI,CAACoB,QAAQ;EACtB;AACF;AAtCqBpB,IAAI,CACRoB,QAAQ;AAuCzB,MAAMI,CAAgB,GAAGxB,IAAI,CAACmB,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}