{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport AuthService from '../service/authService';\nimport { finishLoading, startLoading } from './Loading';\nimport { useAppDispatch } from '../hooks/rtk';\nimport { openModal } from './modal';\nconst authService = AuthService.getHttpInstance();\nexport const authRegister = createAsyncThunk('auth/REGISTER', async (form, thunkAPI) => {\n  console.log('async');\n  console.log(thunkAPI);\n  thunkAPI.dispatch(startLoading());\n  try {\n    const res = await authService.signup(form.username, form.password);\n    return res.data;\n  } catch (e) {\n    //todo 에러메세지 가져오기\n\n    return thunkAPI.rejectWithValue({\n      error: String(e)\n    });\n  } finally {\n    thunkAPI.dispatch(finishLoading());\n  }\n});\nexport const authLogin = createAsyncThunk('auth/LOGIN', async (form, thunkAPI) => {\n  thunkAPI.dispatch(startLoading());\n  try {\n    return {\n      payload: {\n        token: '123',\n        username: '123'\n      }\n    };\n  } catch (e) {\n    return thunkAPI.rejectWithValue({\n      error: '123'\n    });\n  } finally {\n    thunkAPI.dispatch(finishLoading());\n  }\n});\nconst initialAuthFormState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n    passwordMatch: true\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  authError: null,\n  authDuplicateError: null,\n  auth: null\n};\nconst authSlice = createSlice({\n  name: 'authForm',\n  initialState: initialAuthFormState,\n  reducers: {\n    changeField: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const {\n        form,\n        name,\n        value\n      } = payload;\n      state[form][name] = value;\n      if (form === 'register') {\n        if (state[form].password !== state[form].passwordConfirm) state[form].passwordMatch = false;else state[form].passwordMatch = true;\n      }\n    },\n    initialForm: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const {\n        form\n      } = payload;\n      if (form === 'login') state[form] = initialAuthFormState[form];else state[form] = initialAuthFormState[form];\n    }\n  },\n  extraReducers: builder => {\n    var _s = $RefreshSig$();\n    _s(builder.addCase(authRegister.pending, (state, action) => {\n      state.authError = null;\n      console.log('pending auth');\n    }).addCase(authRegister.fulfilled, _s((state, action) => {\n      _s();\n      state.auth = action.payload;\n      useAppDispatch(openModal());\n      console.log('fulfilled auth');\n    }, \"p7p2+qQCkUMX78ZB6lQT0p5eiKs=\", false, function () {\n      return [useAppDispatch];\n    })), \"p7p2+qQCkUMX78ZB6lQT0p5eiKs=\", false, function () {\n      return [useAppDispatch];\n    }).addCase(authRegister.rejected, (state, action) => {\n      var _action$payload;\n      state.authError = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.error;\n    }).addCase(authLogin.pending, (state, action) => {\n      console.log('pending');\n    }).addCase(authLogin.fulfilled, (state, action) => {\n      console.log('fulfilled');\n    }).addCase(authLogin.rejected, (state, action) => {\n      console.log('rejected');\n    });\n  }\n});\nexport const {\n  changeField,\n  initialForm\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","AuthService","finishLoading","startLoading","useAppDispatch","openModal","authService","getHttpInstance","authRegister","form","thunkAPI","console","log","dispatch","res","signup","username","password","data","e","rejectWithValue","error","String","authLogin","payload","token","initialAuthFormState","register","passwordConfirm","passwordMatch","login","authError","authDuplicateError","auth","authSlice","name","initialState","reducers","changeField","state","value","initialForm","extraReducers","builder","addCase","pending","action","fulfilled","rejected","actions","reducer"],"sources":["/Users/ysy/projects/ticktickup-client/src/modules/auth.ts"],"sourcesContent":["import { AxiosError, AxiosResponse } from 'axios';\nimport {\n  createAsyncThunk,\n  createSlice,\n  current,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport { AppDispatch } from '.';\nimport AuthService from '../service/authService';\nimport { finishLoading, startLoading } from './Loading';\nimport { useAppDispatch } from '../hooks/rtk';\nimport { openModal } from './modal';\n\nconst authService = AuthService.getHttpInstance();\n\nexport interface AuthSuccessResponse {\n  username: string;\n  token: string;\n}\n\nexport interface AuthFailResponse {\n  error: string;\n}\n\nexport type Register = {\n  username: string;\n  password: string;\n  passwordConfirm: string;\n  passwordMatch: boolean;\n  [key: string]: string | boolean;\n};\n\nexport type Login = {\n  username: string;\n  password: string;\n  [key: string]: string;\n};\n\nexport const authRegister = createAsyncThunk<\n  { token: string; username: string },\n  { username: string; password: string },\n  {\n    rejectValue: AuthFailResponse;\n    dispatch: AppDispatch;\n  }\n>('auth/REGISTER', async (form, thunkAPI) => {\n  console.log('async');\n  console.log(thunkAPI);\n  thunkAPI.dispatch(startLoading());\n  try {\n    const res = (await authService.signup(\n      form.username,\n      form.password\n    )) as AxiosResponse;\n\n    return res.data;\n  } catch (e) {\n    //todo 에러메세지 가져오기\n\n    return thunkAPI.rejectWithValue({ error: String(e) });\n  } finally {\n    thunkAPI.dispatch(finishLoading());\n  }\n});\n\nexport const authLogin = createAsyncThunk(\n  'auth/LOGIN',\n  async (form: Login, thunkAPI) => {\n    thunkAPI.dispatch(startLoading());\n    try {\n      return { payload: { token: '123', username: '123' } };\n    } catch (e) {\n      return thunkAPI.rejectWithValue({ error: '123' });\n    } finally {\n      thunkAPI.dispatch(finishLoading());\n    }\n  }\n);\n\ninterface InitialAuthFormState {\n  register: Register;\n  login: Login;\n  authError: string | null | undefined;\n  authDuplicateError: string | null;\n  auth: null | { [key: string]: string };\n}\n\nconst initialAuthFormState: InitialAuthFormState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n    passwordMatch: true,\n  },\n\n  login: {\n    username: '',\n    password: '',\n  },\n  authError: null,\n  authDuplicateError: null,\n  auth: null,\n};\n\nconst authSlice = createSlice({\n  name: 'authForm',\n  initialState: initialAuthFormState,\n  reducers: {\n    changeField: (\n      state,\n      {\n        payload,\n      }: PayloadAction<{\n        form: 'login' | 'register';\n        value: string;\n        name: string;\n      }>\n    ) => {\n      const { form, name, value } = payload;\n\n      state[form][name] = value;\n      if (form === 'register') {\n        if (state[form].password !== state[form].passwordConfirm)\n          state[form].passwordMatch = false;\n        else state[form].passwordMatch = true;\n      }\n    },\n    initialForm: (\n      state,\n      { payload }: PayloadAction<{ form: 'login' | 'register' }>\n    ) => {\n      const { form } = payload;\n      if (form === 'login') state[form] = initialAuthFormState[form];\n      else state[form] = initialAuthFormState[form];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(authRegister.pending, (state, action) => {\n        state.authError = null;\n        console.log('pending auth');\n      })\n      .addCase(authRegister.fulfilled, (state, action) => {\n        state.auth = action.payload;\n        useAppDispatch(openModal());\n        console.log('fulfilled auth');\n      })\n      .addCase(authRegister.rejected, (state, action) => {\n        state.authError = action.payload?.error;\n      })\n      .addCase(authLogin.pending, (state, action) => {\n        console.log('pending');\n      })\n      .addCase(authLogin.fulfilled, (state, action) => {\n        console.log('fulfilled');\n      })\n      .addCase(authLogin.rejected, (state, action) => {\n        console.log('rejected');\n      });\n  },\n});\n\nexport const { changeField, initialForm } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}