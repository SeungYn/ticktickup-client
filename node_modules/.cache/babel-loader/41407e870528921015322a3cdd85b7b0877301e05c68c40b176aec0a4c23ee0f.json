{"ast":null,"code":"import { createAsyncThunk, createSlice, current } from '@reduxjs/toolkit';\nimport AuthService from '../service/authService';\nimport { finishLoading, startLoading } from './Loading';\nconst authService = AuthService.getHttpInstance();\nexport const authRegister = createAsyncThunk('auth/REGISTER', async (form, thunkAPI) => {});\nexport const authLogin = createAsyncThunk('auth/LOGIN', async (form, thunkAPI) => {\n  thunkAPI.dispatch(startLoading());\n  try {\n    return {\n      payload: {\n        token: '123',\n        username: '123'\n      }\n    };\n  } catch (e) {\n    return thunkAPI.rejectWithValue({\n      error: '123'\n    });\n  } finally {\n    thunkAPI.dispatch(finishLoading());\n  }\n});\nconst initialAuthFormState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: ''\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  authError: null,\n  authDuplicateError: null,\n  auth: null\n};\nconst authSlice = createSlice({\n  name: 'authForm',\n  initialState: initialAuthFormState,\n  reducers: {\n    changeField: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const {\n        form,\n        name,\n        value\n      } = payload;\n      console.log(current(state));\n      state[form][name] = value;\n    },\n    initialForm: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const {\n        form\n      } = payload;\n      if (form === 'login') state[form] = initialAuthFormState[form];else state[form] = initialAuthFormState[form];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(authRegister.pending, (state, action) => {\n      console.log('pending auth');\n    }).addCase(authRegister.fulfilled, (state, action) => {\n      console.log('fulfilled auth');\n    }).addCase(authRegister.rejected, (state, action) => {\n      console.log('rejected auth');\n    }).addCase(authLogin.pending, (state, action) => {\n      console.log('pending');\n    }).addCase(authLogin.fulfilled, (state, action) => {\n      console.log('fulfilled');\n    }).addCase(authLogin.rejected, (state, action) => {\n      console.log('rejected');\n    });\n  }\n});\nexport const {\n  changeField,\n  initialForm\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","current","AuthService","finishLoading","startLoading","authService","getHttpInstance","authRegister","form","thunkAPI","authLogin","dispatch","payload","token","username","e","rejectWithValue","error","initialAuthFormState","register","password","passwordConfirm","login","authError","authDuplicateError","auth","authSlice","name","initialState","reducers","changeField","state","value","console","log","initialForm","extraReducers","builder","addCase","pending","action","fulfilled","rejected","actions","reducer"],"sources":["/Users/ysy/projects/ticktickup-client/src/modules/auth.ts"],"sourcesContent":["import {\n  createAsyncThunk,\n  createSlice,\n  current,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport { AppDispatch } from '.';\nimport AuthService from '../service/authService';\nimport { finishLoading, startLoading } from './Loading';\n\nconst authService = AuthService.getHttpInstance();\n\nexport interface AuthSuccessResponse {\n  username: string;\n  token: string;\n}\n\nexport interface AuthFailResponse {\n  error: string;\n}\n\nexport type Register = {\n  username: string;\n  password: string;\n  passwordConfirm: string;\n  [key: string]: string;\n};\n\nexport type Login = {\n  username: string;\n  password: string;\n  [key: string]: string;\n};\n\nexport const authRegister = createAsyncThunk<\n  { token: string; username: string },\n  { username: string; password: string },\n  {\n    rejectValue: { error: string };\n    dispatch: AppDispatch;\n  }\n>('auth/REGISTER', async (form, thunkAPI) => {});\n\nexport const authLogin = createAsyncThunk(\n  'auth/LOGIN',\n  async (form: Login, thunkAPI) => {\n    thunkAPI.dispatch(startLoading());\n    try {\n      return { payload: { token: '123', username: '123' } };\n    } catch (e) {\n      return thunkAPI.rejectWithValue({ error: '123' });\n    } finally {\n      thunkAPI.dispatch(finishLoading());\n    }\n  }\n);\n\ninterface InitialAuthFormState {\n  register: Register;\n  login: Login;\n  authError: string | null;\n  authDuplicateError: string | null;\n  auth: null | { [key: string]: string };\n}\n\nconst initialAuthFormState: InitialAuthFormState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n  },\n\n  login: {\n    username: '',\n    password: '',\n  },\n  authError: null,\n  authDuplicateError: null,\n  auth: null,\n};\n\nconst authSlice = createSlice({\n  name: 'authForm',\n  initialState: initialAuthFormState,\n  reducers: {\n    changeField: (\n      state,\n      {\n        payload,\n      }: PayloadAction<{\n        form: 'login' | 'register';\n        value: string;\n        name: string;\n      }>\n    ) => {\n      const { form, name, value } = payload;\n      console.log(current(state));\n      state[form][name] = value;\n    },\n    initialForm: (\n      state,\n      { payload }: PayloadAction<{ form: 'login' | 'register' }>\n    ) => {\n      const { form } = payload;\n      if (form === 'login') state[form] = initialAuthFormState[form];\n      else state[form] = initialAuthFormState[form];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(authRegister.pending, (state, action) => {\n        console.log('pending auth');\n      })\n      .addCase(authRegister.fulfilled, (state, action) => {\n        console.log('fulfilled auth');\n      })\n      .addCase(authRegister.rejected, (state, action) => {\n        console.log('rejected auth');\n      })\n      .addCase(authLogin.pending, (state, action) => {\n        console.log('pending');\n      })\n      .addCase(authLogin.fulfilled, (state, action) => {\n        console.log('fulfilled');\n      })\n      .addCase(authLogin.rejected, (state, action) => {\n        console.log('rejected');\n      });\n  },\n});\n\nexport const { changeField, initialForm } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}