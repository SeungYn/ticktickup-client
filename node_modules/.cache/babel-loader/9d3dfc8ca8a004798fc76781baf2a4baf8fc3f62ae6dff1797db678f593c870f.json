{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport AuthService from '../service/authService';\nimport { finishLoading, startLoading } from './Loading';\nconst authService = AuthService.getHttpInstance();\nexport const authRegister = createAsyncThunk('auth/REGISTER', async (form, thunkAPI) => {\n  console.log('async');\n  console.log(thunkAPI);\n  authService.signup('tmddbs', 'tmddbs312');\n  try {\n    return {\n      token: '123',\n      username: '123'\n    };\n  } catch (e) {\n    return thunkAPI.rejectWithValue({\n      error: '123'\n    });\n  }\n});\nexport const authLogin = createAsyncThunk('auth/LOGIN', async (form, thunkAPI) => {\n  thunkAPI.dispatch(startLoading());\n  try {\n    return {\n      payload: {\n        token: '123',\n        username: '123'\n      }\n    };\n  } catch (e) {\n    return thunkAPI.rejectWithValue({\n      error: '123'\n    });\n  } finally {\n    thunkAPI.dispatch(finishLoading());\n  }\n});\nconst initialAuthFormState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: ''\n  },\n  login: {\n    username: '',\n    password: ''\n  }\n};\nconst authSlice = createSlice({\n  name: 'authForm',\n  initialState: initialAuthFormState,\n  reducers: {\n    changeField: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const {\n        form,\n        name,\n        value\n      } = payload;\n      console.log(state[form]);\n      state[form][name] = value;\n    },\n    initialForm: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const {\n        form\n      } = payload;\n      if (form === 'login') state[form] = initialAuthFormState[form];else state[form] = initialAuthFormState[form];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(authRegister.pending, (state, action) => {}).addCase(authRegister.fulfilled, (state, action) => {}).addCase(authRegister.rejected, (state, action) => {}).addCase(authLogin.pending, (state, action) => {\n      console.log('pending');\n    }).addCase(authLogin.fulfilled, (state, action) => {\n      console.log('fulfilled');\n    }).addCase(authLogin.rejected, (state, action) => {\n      console.log('rejected');\n    });\n  }\n});\nexport const {\n  changeField,\n  initialForm\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","AuthService","finishLoading","startLoading","authService","getHttpInstance","authRegister","form","thunkAPI","console","log","signup","token","username","e","rejectWithValue","error","authLogin","dispatch","payload","initialAuthFormState","register","password","passwordConfirm","login","authSlice","name","initialState","reducers","changeField","state","value","initialForm","extraReducers","builder","addCase","pending","action","fulfilled","rejected","actions","reducer"],"sources":["/Users/ysy/projects/ticktickup-client/src/modules/auth.ts"],"sourcesContent":["import {\n  createAsyncThunk,\n  createSlice,\n  current,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport { AppDispatch } from '.';\nimport AuthService from '../service/authService';\nimport { finishLoading, startLoading } from './Loading';\n\nconst authService = AuthService.getHttpInstance();\n\nexport interface AuthSuccessResponse {\n  username: string;\n  token: string;\n}\n\nexport interface AuthFailResponse {\n  error: string;\n}\n\nexport type Register = {\n  username: string;\n  password: string;\n  passwordConfirm: string;\n  [key: string]: string;\n};\n\nexport type Login = {\n  username: string;\n  password: string;\n  [key: string]: string;\n};\n\nexport const authRegister = createAsyncThunk(\n  'auth/REGISTER',\n  async (form, thunkAPI) => {\n    console.log('async');\n    console.log(thunkAPI);\n    authService.signup('tmddbs', 'tmddbs312');\n    try {\n      return { token: '123', username: '123' };\n    } catch (e) {\n      return thunkAPI.rejectWithValue({ error: '123' });\n    }\n  }\n);\n\nexport const authLogin = createAsyncThunk(\n  'auth/LOGIN',\n  async (form: Login, thunkAPI) => {\n    thunkAPI.dispatch(startLoading());\n    try {\n      return { payload: { token: '123', username: '123' } };\n    } catch (e) {\n      return thunkAPI.rejectWithValue({ error: '123' });\n    } finally {\n      thunkAPI.dispatch(finishLoading());\n    }\n  }\n);\n\ninterface InitialAuthFormState {\n  register: Register;\n  login: Login;\n}\n\nconst initialAuthFormState: InitialAuthFormState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n  },\n\n  login: {\n    username: '',\n    password: '',\n  },\n};\n\nconst authSlice = createSlice({\n  name: 'authForm',\n  initialState: initialAuthFormState,\n  reducers: {\n    changeField: (\n      state,\n      {\n        payload,\n      }: PayloadAction<{\n        form: 'login' | 'register';\n        value: string;\n        name: string;\n      }>\n    ) => {\n      const { form, name, value } = payload;\n      console.log(state[form]);\n      state[form][name] = value;\n    },\n    initialForm: (\n      state,\n      { payload }: PayloadAction<{ form: 'login' | 'register' }>\n    ) => {\n      const { form } = payload;\n      if (form === 'login') state[form] = initialAuthFormState[form];\n      else state[form] = initialAuthFormState[form];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(authRegister.pending, (state, action) => {})\n      .addCase(authRegister.fulfilled, (state, action) => {})\n      .addCase(authRegister.rejected, (state, action) => {})\n      .addCase(authLogin.pending, (state, action) => {\n        console.log('pending');\n      })\n      .addCase(authLogin.fulfilled, (state, action) => {\n        console.log('fulfilled');\n      })\n      .addCase(authLogin.rejected, (state, action) => {\n        console.log('rejected');\n      });\n  },\n});\n\nexport const { changeField, initialForm } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}