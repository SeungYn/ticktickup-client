{"ast":null,"code":"import Http from '../network/http';\nexport default class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  async signup(username, password) {\n    await this.http.fetch('/auth/signup', {\n      method: 'POST',\n      data: JSON.stringify({\n        username,\n        password\n      })\n    });\n  }\n  static getHttpInstance() {\n    if (!AuthService.instance) {\n      AuthService.instance = new AuthService(Http.getHttpInstance());\n    }\n    return AuthService.instance;\n  }\n}\nAuthService.instance = void 0;","map":{"version":3,"names":["Http","AuthService","constructor","http","signup","username","password","fetch","method","data","JSON","stringify","getHttpInstance","instance"],"sources":["/Users/ysy/projects/ticktickup-client/src/service/authService.ts"],"sourcesContent":["import Http, { HttpInterface } from '../network/http';\nexport default class AuthService {\n  private static instance: AuthService;\n\n  private constructor(private http: HttpInterface) {}\n\n  async signup(username: string, password: string) {\n    await this.http.fetch('/auth/signup', {\n      method: 'POST',\n      data: JSON.stringify({ username, password }),\n    });\n  }\n\n  public static getHttpInstance() {\n    if (!AuthService.instance) {\n      AuthService.instance = new AuthService(Http.getHttpInstance());\n    }\n    return AuthService.instance;\n  }\n}\n"],"mappings":"AAAA,OAAOA,IAAI,MAAyB,iBAAiB;AACrD,eAAe,MAAMC,WAAW,CAAC;EAGvBC,WAAW,CAASC,IAAmB,EAAE;IAAA,KAArBA,IAAmB,GAAnBA,IAAmB;EAAG;EAElD,MAAMC,MAAM,CAACC,QAAgB,EAAEC,QAAgB,EAAE;IAC/C,MAAM,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC,cAAc,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEA,OAAcM,eAAe,GAAG;IAC9B,IAAI,CAACX,WAAW,CAACY,QAAQ,EAAE;MACzBZ,WAAW,CAACY,QAAQ,GAAG,IAAIZ,WAAW,CAACD,IAAI,CAACY,eAAe,EAAE,CAAC;IAChE;IACA,OAAOX,WAAW,CAACY,QAAQ;EAC7B;AACF;AAlBqBZ,WAAW,CACfY,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}